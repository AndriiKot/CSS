maxElements = 65
stepDistance = 20
positionElementFirst = 0
sizeSnowball = 10

size(n = sizeSnowball)
  width n px
  height n px

body {
    background-color: rgb(51, 94, 164);
    position: relative;
    width 100%
    height 100%
}

[class|=snowball-start] 
[class|=snowball-end] {
    position absolute;
    top: 0;
    left: 0;
    size()
    background: white
    border-radius: 50%
    opacity 1
    animation snowballStartRain 5s infinite
}

random(min,max)
  return floor(math(0, 'random')*(max - min + 1) + min)


mixin-animation-delay(arg = 0)
        if arg % 10 == 0
            return 2
        if arg % 9 == 0
            return  1  * random(5, 100) * 0.01
        if arg % 8 == 0
            return  2 * random(1,100) * 0.01
        if arg % 7 == 0
            return  7 * random(1, 100) * 0.01
        if arg % 6 == 0
            return  4 * random(1, 100) * 0.01
        if arg % 5 == 0
            return  1 * random(1, 100) * 0.01
        if arg % 4 == 0
            return  4 * random(1, 100) * 0.01
        if arg % 3 == 0
            return  6 * random(1, 100) * 0.01
        if arg % 2 == 0
            return  5 * random(1, 100) * 0.01
        if arg % 1 == 0
            return  random(1, 100) * 0.01
    

animationDelayStart = 0
animationDelayEnd = 0

for num in (1..maxElements)
    .snowball-start-{num}
    .snowball-end-{num}
      left positionElementFirst px
    positionElementFirst += stepDistance
    .snowball-start-{num}
      animation-delay animationDelayStart s
    animationDelayStart = (mixin-animation-delay(num))
    .snowball-end-{num}
        background-color: red
        animation-delay animationDelayEnd + (2 * random(1,10) * 0.1) s
    animationDelayEnd = mixin-animation-delay(num) 


@keyframes snowballStartRain {
    0% {
        opacity 0
        }
    30% {
        opacity 1
        }
    70% {
        opacity 1
        }
    100% {
        opacity 0
        top: 90vh
        }
}

    